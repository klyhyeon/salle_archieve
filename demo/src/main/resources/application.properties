
server.port=8080
spring.mvc.view.prefix=/WEB-INF/view/
spring.mvc.view.suffix=.jsp
spring.mvc.static-path-pattern=/resources/**
#/resources/css/**

#h2 dataSource
#spring.datasource.url= jdbc:h2:file:C:/Users/klyhy/Documents/SW ENGINEER/Projects/SpringWeb/1_MarketplacePreowned
#spring.datasource.driverClassName=
#spring.datasource.username=baekho
#spring.datasource.password=1234
#인메모리 DB네임이 매번 변경되는 것을 막는 config
#spring.datasource.generate-unique-name=false
#spring.h2.console.enabled=true
#JPA 플랫폼을 지정함
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

##12/22 h2 datasource renew
##spring.datasource.url= jdbc:h2:file:C:/Users/klyhy/Documents/SW ENGINEER/Projects/SpringWeb/1_MarketplacePreowned/h2_renew
#spring.datasource.url= jdbc:h2:file:/opt/h2
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=baekho
#spring.datasource.password=1234
#spring.datasource.generate-unique-name=false
#spring.h2.console.enabled=true
##spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.datasource.url= jdbc:h2:~/test;AUTO_SERVER=TRUE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=baekho
spring.datasource.password=1234
spring.datasource.generate-unique-name=false
spring.h2.console.enabled=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.settings.web-allow-others=true
spring.h2.console.path=/console

# MyBatis
mybatis.type-aliases-package=com/example/demo/mapper
mybatis.mapper-locations=com/example/demo/mapper/*.xml

# file upload
#file.upload.path = C:\\Users\\klyhy\\git\\salle_eclipse_v1\\demo\\src\\main\\resources\\static\\img\\imgUpload
#file.upload.path.txt = C:\\Users\\klyhy\\git\\salle_eclipse_v1\\demo\\src\\main\\resources\\static\\txt\\
file.upload.path = \\opt\\tomcat\\apache-tomcat-9.0.43\\webapps\\demo\\imgUpload
file.upload.path.txt = \\opt\\tomcat\\apache-tomcat-9.0.43\\webapps\\demo\\\WEB-INF\\classes\\static
spring.servlet.multipart.max-file-size=10MB



#google login Oauth2API
#spring.security.oauth2.client.registration.google.client-id= 382152198101-6d0t01jn6rhma39nm352v0d35f0kpc8v.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret = cxCZgX-7H6YMi2QjMvUbK1RG
#scope를 별도로 등록하지 않으면 default값인 openid까\uB784\uB784 id로 인식하기 때문이다.
#이렇게 되면 Open id Provide인 서비스(google)과 그렇지 않은 서비스(naver, kakao)를 나눠서 각각 Service를 만들어야 합니다.
#spring.security.oauth2.client.registration.google.scope = profile, email